syntax = "proto3";

package dfuse.eosio.statedb.v1;

option go_package = "github.com/zhongshuwen/historyexp/pb/dfuse/eosio/statedb/v1;pbstatedb";

import "dfuse/bstream/v1/bstream.proto";

service State {
	// Replaces /v0/state/abi
	rpc GetABI(GetABIRequest) returns (GetABIResponse);

	// Replaces /v0/state/key_accounts
	rpc GetKeyAccounts(GetKeyAccountsRequest) returns (GetKeyAccountsResponse);

	// Replaces /v0/state/permission_links
	rpc GetPermissionLinks(GetPermissionLinksRequest) returns (GetPermissionLinksResponse);

	// Replaces /v0/state/table/row
	rpc GetTableRow(GetTableRowRequest) returns (GetTableRowResponse);

	// Replaces /v0/state/table
	rpc StreamTableRows(StreamTableRowsRequest) returns (stream TableRowResponse);

	// Replaces /v0/state/table_scopes
	rpc StreamTableScopes(StreamTableScopesRequest) returns (stream TableScopeResponse);

	// Replaces /v0/state/tables/scopes
	rpc StreamMultiScopesTableRows(StreamMultiScopesTableRowsRequest) returns (stream TableRowsScopeResponse);

	// Replaces /v0/state/tables/accounts
	rpc StreamMultiContractsTableRows(StreamMultiContractsTableRowsRequest) returns (stream TableRowsContractResponse);
}

message GetABIRequest {
	string contract = 1;
	uint64 block_num = 2;
	bool to_json = 3;
}

message GetABIResponse {
	uint64 block_num = 1;
	bytes raw_abi = 2;
	string json_abi = 3;
}

message GetKeyAccountsRequest {
	string public_key = 1;
	uint64 block_num = 2;
}

message GetKeyAccountsResponse {
	uint64 block_num = 1;
	repeated string accounts = 2;
}

message GetPermissionLinksRequest {
	uint64 block_num = 1;
	string account = 2;
}

message GetPermissionLinksResponse {
	dfuse.bstream.v1.BlockRef up_to_block = 1;
	dfuse.bstream.v1.BlockRef last_irreversible_block = 2;
	repeated LinkedPermission permissions = 3;
}

message LinkedPermission {
	string contract = 1;
	string action = 2;
	string permission_name = 3;
}

message GetTableRowRequest {
	uint64 block_num = 1;
	string key_type = 2;
	bool to_json = 3;
	bool with_block_num = 4;
	bool irreversible_only = 5;
	string contract = 6;
	string table = 7;
	string scope = 8;
	string primary_key = 9;
}

message GetTableRowResponse {
	dfuse.bstream.v1.BlockRef up_to_block = 1;
	dfuse.bstream.v1.BlockRef last_irreversible_block = 2;
	TableRowResponse row = 3;
}

message StreamTableRowsRequest {
	uint64 block_num = 1;
	string key_type = 2;
	bool to_json = 3;
	bool with_block_num = 4;
	bool irreversible_only = 5;
	string contract = 6;
	string table = 7;
	string scope = 8;
}

message	TableRowResponse {
	string key = 1;
	bytes data = 2;
	string json = 3;
	string payer = 4;
	uint64 block_number = 5;
}

message StreamTableScopesRequest  {
	uint64 block_num = 1;
	string contract = 2;
	string table = 3;
}

message TableScopeResponse {
	uint64 block_num = 1;
	string scope = 2;
}

message StreamMultiScopesTableRowsRequest {
	uint64 block_num = 1;
	string contract = 2;
	string table = 3;
	string key_type = 4;
	bool to_json = 5;
	bool with_block_num = 6;
	bool irreversible_only = 7;
	repeated string scopes = 8;
}

message StreamMultiContractsTableRowsRequest {
	uint64 block_num = 1;
	string scope = 2;
	string table = 3;
	string key_type = 4;
	bool to_json = 5;
	bool with_block_num = 6;
	bool irreversible_only = 7;
	repeated string contracts = 8;
}

message TableRowsScopeResponse {
	string scope = 1;
	repeated TableRowResponse rows = 4;
}

message TableRowsContractResponse {
	string contract = 1;
	repeated TableRowResponse rows = 4;
}
